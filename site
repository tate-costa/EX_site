<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Execution Tracker</title>

  <!-- Firebase SDKs -->
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-auth-compat.js"></script>

  <!-- SheetJS for Excel export -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

  <style>
    body { font-family: sans-serif; padding: 20px; }
    .event { margin-bottom: 30px; }
    input { margin: 5px; width: 200px; }
    button { margin-top: 10px; }
    .hidden { display: none; }
  </style>
</head>
<body>

  <h2>Login</h2>
  <div id="login-section">
    <input type="email" id="email" placeholder="Email" />
    <input type="password" id="password" placeholder="Password" />
    <button onclick="login()">Login</button>
  </div>

  <div id="dashboard" class="hidden">
    <h2>Welcome, <span id="user-display"></span></h2>
    <div id="events-container"></div>
    <button onclick="exportToExcel()">Download Excel</button>
  </div>

  <script>
    // ðŸ”Œ Replace with your Firebase config
    const firebaseConfig = {
      apiKey: "YOUR_API_KEY",
      authDomain: "YOUR_PROJECT.firebaseapp.com",
      projectId: "YOUR_PROJECT_ID",
      // ... other config values
    };
    firebase.initializeApp(firebaseConfig);

    const events = ["FX", "PH", "SR", "VT", "PB", "HB"];
    const userData = {};

    function login() {
      const email = document.getElementById("email").value.trim();
      const password = document.getElementById("password").value.trim();

      firebase.auth().signInWithEmailAndPassword(email, password)
        .then(userCredential => {
          const user = userCredential.user;
          userData.username = user.email;
          userData.events = {};
          document.getElementById("login-section").classList.add("hidden");
          document.getElementById("dashboard").classList.remove("hidden");
          document.getElementById("user-display").textContent = user.email;
          renderEventForms();
        })
        .catch(error => {
          alert("Login failed: " + error.message);
        });
    }

    function renderEventForms() {
      const container = document.getElementById("events-container");
      events.forEach(event => {
        const div = document.createElement("div");
        div.className = "event";
        div.innerHTML = `<h3>${event}</h3><form id="${event}-form"></form>`;
        for (let i = 1; i <= 8; i++) {
          const input = document.createElement("input");
          input.type = "text";
          input.placeholder = `Skill ${i}`;
          input.name = `skill${i}`;
          div.querySelector("form").appendChild(input);
        }
        const saveBtn = document.createElement("button");
        saveBtn.textContent = "Save";
        saveBtn.type = "button";
        saveBtn.onclick = () => saveEventData(event);
        div.querySelector("form").appendChild(saveBtn);
        container.appendChild(div);
      });
    }

    function saveEventData(event) {
      const form = document.getElementById(`${event}-form`);
      const skills = [];
      for (let i = 1; i <= 8; i++) {
        skills.push(form.elements[`skill${i}`].value.trim());
      }
      userData.events[event] = skills;
      alert(`${event} skills saved!`);
    }

    function exportToExcel() {
      const wb = XLSX.utils.book_new();

      Object.entries(userData.events).forEach(([event, skills]) => {
        const sheetData = [["Skill #", "Name"]];
        skills.forEach((skill, i) => {
          sheetData.push([i + 1, skill]);
        });
        const ws = XLSX.utils.aoa_to_sheet(sheetData);
        XLSX.utils.book_append_sheet(wb, ws, event);
      });

      XLSX.writeFile(wb, `${userData.username}_ExecutionTracker.xlsx`);
    }
  </script>

</body>
</html>
